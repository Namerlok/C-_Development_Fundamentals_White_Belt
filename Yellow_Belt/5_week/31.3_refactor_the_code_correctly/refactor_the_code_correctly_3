//============================================================================
// checking my fellow student's code, part 3
//============================================================================

#include <iostream>
#include <string>
#include <vector>

using namespace std;
class Human{
public:
    Human(const string& name)
    :Name(name){
    }
    virtual void Walk(const string& destination) = 0;
    string NamePrinter() const {
        return Name;
    }
protected:
    string Name;
};

class Student :public Human {
public:

    Student(const string& name, const string& favouriteSong)
    :Human(name)
    ,FavouriteSong(favouriteSong)
    {
    }

    void Learn() const {
        cout << "Student: " << Name << " learns" << endl;
    }

    void Walk(const string& destination) override  {
        cout << "Student: " << Name << " walks to: " << destination << endl;
        cout << "Student: " << Name << " sings a song: " << FavouriteSong << endl;
    }

    void SingSong() const {
        cout << "Student: " << Name << " sings a song: " << FavouriteSong << endl;
    }

public:
    string FavouriteSong;
};


class Teacher : public Human {
public:

    Teacher(const string& name, const string& subject)
    : Human(name)
    ,Subject(subject)
    {
    }

    void Teach() const {
        cout << "Teacher: " << Name << " teaches: " << Subject << endl;
    }

    void Walk(const string &destination) override {
        cout << "Teacher: " << Name << " walks to: " << destination << endl;
    }

public:
    string Subject;
};


class Policeman : public Human {
public:
    Policeman(const string& name)
    :Human(name)
    {
    }

    void Check(const Human& t) const {
        cout << "Policeman: " << Name << " checks Teacher. Teacher's name is: " << t.NamePrinter() << endl;
    }

    void Walk(const string& destination) override  {
        cout << "Policeman: " << Name << " walks to: " << destination << endl;
    }

};


void VisitPlaces( Human& t, vector<string> places) {
    for (const string p : places) {
        t.Walk(p);
    }
}




int main() {
    Teacher t("Jim", "Math");
    Student s("Ann", "We will rock you");
    Policeman p("Bob");

    VisitPlaces(t, {"Moscow", "London"});
    p.Check(s);
    VisitPlaces(s, {"Moscow", "London"});
    return 0;
}

